To start with Appium with Java We have to complete the below requirements
1) Install JDK and Java and set the JAVA_HOME in Advanced System Settings -> Environment Variables -> System Variables
2) Download Android Studio to get the Android SDK Package to work with android apps from "https://developer.android.com/studio"
3) Check if your Android Studio contains the Android Emulator
4) Emulator is virtual android device which we are using for mobile automation
5) Download Node -> Node is required for Launching appium server because it is developed in the node platform
6) Download node js from "https://nodejs.org/en/download"
----------------------------------------------------------------------------------------------------------------------------------------------
Set up the Android studio and node js into your system (Windows)
1) Find the folder "AppData" inside your C Drive, As this folder is always invisible search with below path
2) ThisPC > OS(C:) > Users > {Particular_User_Name} > AppData
3) Open Folder "AppData" then open folder called "Local" present inside "AppData"
4) Open "Android" Folder present inside the "Local" Folder under "AppData"
5) Open "Sdk" Folder present inside "Android" Folder and Copy the folder path and add it in System Environment Variables
6) Set ANDROID_HOME -> C:\Users\{Particular_User_Name}\AppData\Local\Android\Sdk in Advanced System Settings -> Environment Variables -> System Variables
7) Open Android Studio by Launching the Application and select any basic activity & Select any project from template
8) Once Build is completed in Android Studio, click on "Tools" menu in the topmost task bar of Android Studio
9) Click on "SDK Manager" under "Tools" menu & select "SDK Tools" Tab under "SDK Manager"
10) Uncheck the "Hide Obsolete Packages" Check Box & Once it is done you will see the option "Android SDK Tools (Obsolete)" Then click on this check box and click on the Apply Button
11) Now it will install all Android Tools into your Android Studio & once it is done you will see the "tools" folder inside your "Sdk" folder at C:\Users\{Particular_User_Name}\AppData\Local\Android\Sdk
12) Now Open the "tools" folder and open the "bin" folder and copy the entire path -> C:\Users\{Particular_User_Name}\AppData\Local\Android\Sdk\tools\bin
13) Now Go To Advanced System Settings -> Environment Variables -> System Variables -> Path
14) Set the Path Variable as C:\Users\{Particular_User_Name}\AppData\Local\Android\Sdk\tools\bin
15) Now Set one more Path for tools as well in System Variables -> Path as :\Users\{Particular_User_Name}\AppData\Local\Android\Sdk\tools
16) Now set one more path in System Variables -> Path as C:\Users\{Particular_User_Name}\AppData\Local\Android\Sdk\platform-tools
17) Now Configure the Node JS as NODE_HOME in Advanced System Settings -> Environment Variables -> System Variables
18) Set NODE_HOME as "C:\Program Files\nodejs" & apart from that you need to set "npm" bin path
19) Now set one more path in System Variables -> Path as C:\Program Files\nodejs\node_modules\npm\bin
20) Now Configure the Emulator for launching your virtual device
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Emulator Configuration
1) Open Android Studio by Launching the Application and select any basic activity & Select any project from template
2) Go to -> "Tools" menu in the topmost task bar of Android Studio -> Click on "Device Manager"
3) Here we will create virtual device and deploy our app as ".apk" in the virtual device and run the automation test case
4) Click on plus icon "+" inside "Device Manager" then click on "Create Virtual Device"
5) Now you can choose any device -> Refer the AndroidStudio_Setup images at "ImportantNotes/ImportantScreenshots/AndroidStudio_Setup"
------------------------------------------------------------------------------------------------------------------------------------------------------------------
Download and Install Appium Server
1) Appium server is the core engine of our testing
2) We will install appium server with node js and npm commands
3) Open Windows Power Shell or Command Prompt
4) Open your terminal as administrator & Run command : npm install -g appium
5) To start the appium server run command in the terminal as : appium
6) Refer the Refer the AppiumServer_Setup images at ImportantNotes/ImportantScreenshots/AppiumServer_Setup
-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Install Appium Drivers
1) Android is developed by Google and it has its own driver called "uiautomator2"
2) We need to install this driver to run our automation test cases on android devices
3) Open your terminal as administrator & Run command : appium driver install uiautomator2
4) To check if the driver is installed successfully run the command : appium driver list
5) Refer the AppiumDriver_Setup images at ImportantNotes/ImportantScreenshots/AppiumDriver_Setup/AppiumDriver_Setup_4.png
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Invoke Appium server automatically
1) We can invoke the appium server automatically by using the below code snippet
2) Navigate to appium folder and open the main.js file
3) Open the file "C:\Users\{Particular_User_Name}\AppData\Roaming\npm\node_modules\appium\build\lib\main.js"
4) Search for the line "appium.main(args)" and add the below code snippet just before this line
5) Add the below code snippet to invoke appium server automatically
```java
        AppiumDriverLocalService serviceBuilder = new AppiumServiceBuilder()
                .withAppiumJS(new File("C:/Users/Ratnakar/AppData/Roaming/npm/node_modules/appium/build/lib/main.js")) // Appium requires the absolute path to the "appium/build/lib/main.js" file
                .withIPAddress("127.0.0.1")
                .usingPort(4723)
                .withTimeout(Duration.ofSeconds(120))
                .build();
        serviceBuilder.start(); // Start the Appium server service
```
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Important Commands for Windows Command Prompt
1) To check if the Java is installed successfully run command : java -version
2) To check if the Android SDK is installed successfully run command : adb version
3) To check if the Node JS is installed successfully run command : node -v
4) To check if the npm is installed successfully run command : npm -v
5) To check if the Appium server is installed successfully run command : appium -v
6) To check if the Appium driver is installed successfully run command : appium driver list
7) To check if the Emulator is installed successfully run command : emulator -list-avds
8) To start the Emulator run command : emulator -avd {Emulator_Name}
9) To stop the Emulator run command : adb -s emulator-{Emulator_Name} emu kill
10) To clear the command prompt in Windows run command : cls
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Download and Install Appium Inspector
1) Appium Inspector is a tool to inspect the elements of the mobile application
2) Go to the website "https://github.com/appium/appium-inspector" OR "https://github.com/appium/appium-inspector/releases"
3) For Windows download the latest version of Appium Inspector as ".exe" file
4) Once the download is completed, double click on the ".exe" file to install the Appium Inspector
5) Once the installation is completed, open the Appium Inspector
6) Refer the AppiumInspector_Setup images at ImportantNotes/ImportantScreenshots/AppiumInspector_Setup
7) Now we have to give the details of our android emulator in the Appium Inspector
8) Refer the image ImportantNotes/ImportantScreenshots/AppiumServer_Setup/AppiumInspectorCapabilities_Android.png
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Important appium-gestures-plugin
WebSite: https://github.com/AppiumTestDistribution/appium-gestures-plugin
WebSite: https://github.com/appium/dmg-template/blob/master/Appium.app/Contents/Resources/node_modules/appium/docs/gestures.md
WebSite: https://appium.io/docs/en/latest/
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Identify the Mobile application package and Mobile application activity
1) Open the command prompt and run the command "adb devices" to check if the emulator is running
2) Open the Android Emulator and launch the application you want to automate using the Android Studio
3) Open the specific application activity which you want to automate using the Android Emulator from Android Studio
4) Open the command prompt and run the command "adb shell dumpsys activity activities | findstr 'mFocusedActivity'"
5) For windows users, you can use the command {adb shell dumpsys window | find "mCurrentFocus"}
6) For MAC users, you can use the command {adb shell dumpsys grep | find -E 'mCurrentFocus'}
7) This command will give you the package name and activity name of the application you are currently using in the emulator
8) Example: <"io.appium.android.apis/io.appium.android.apis.preference.PreferenceDependencies"> -> Here before "/" we have the package name and after "/" we have the activity name
9) You can also use the command "adb shell pm list packages" to list all the installed packages in the emulator
10) You can also use the command "adb shell pm list packages -f" to list all the installed packages with their path in the emulator
11) You can also use the command "adb shell pm path <package_name>" to get the path of a specific package in the emulator
12) You can also use the command "adb shell pm path <package_name> | findstr 'base.apk'" to get the path of the base APK of a specific package in the emulator
13) Please refer the image ImportantNotes/ImportantScreenshots/PackageAndActivity_MobileApp/MobileApplicationPackageAndActivity.PNG for more details
14) Reference documentation - https://github.com/appium/appium-uiautomator2-driver#mobile-startactivity